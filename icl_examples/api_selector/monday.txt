Example 1:
Background: No background
User query: Get the id for the board with name AgileLoop
API calling 1: POST /v2 with the graphql query = "query {
  boards{
    id
    name
  }
}"
API response: {
    "data": {
        "boards": [
            {
                "id": "6842334624",
                "name": "AgileLoop"
            }
        ]
    },
    "account_id": 23976820
}

Example 2:
Background: Agileloop board id is 6842334624
User query: Get the tasks durations in monday for the board with id 6842334624
API calling 1: POST /v2 with the graphql query = "query {
  boards (ids: 6842334624){
    allItems:items_page (limit: 10) {
      cursor
      items {
        id
        name
         itemData:column_values {
          column{
            title
          }
          text
        }
      }
    }
  }
}"
API response: {
  "data": {
    "boards": [
      {
        "allItems": {
          "cursor": null,
          "items": [
            {
              "id": "6897639616",
              "name": "Tarea 1",
              "itemData": [
                {
                  "column": {
                    "title": "Owner"
                  },
                  "text": "Paula Micheli"
                },
                {
                  "column": {
                    "title": "Status"
                  },
                  "text": "Not Started"
                },
                {
                  "column": {
                    "title": "Due date"
                  },
                  "text": "2024-06-26"
                },
                {
                  "column": {
                    "title": "Timeline"
                  },
                  "text": "2024-06-24 - 2024-06-26"
                }
              ]
            }
          ]
        }
      }
    ]
  },
  "account_id": 23976820
}
Example 3:
Background: Agileloop board id is 6842334624
User query: Get the stuck status items and updates for the board with id 6842334624
API calling 1: 
FOR compare_value use values:
0: Working on it 
1: Done
2: Stuck
If Query don't specify a status, just put [0,1,2] as compare_value
POST /v2 with the graphql query = "query {
  boards (ids: 6842334624){
    allItems:items_page (
      limit: 10
      query_params: {rules: [{column_id: "project_status", compare_value: [2]}]}
    ) {
      cursor
      items {
        id
        name
         itemData:column_values {
          column{
            title
          }
          text
        }
        creator {
          email
        }
        updates {
          text_body
          created_at
          creator {
            name
          }
        }
      }
    }
  }
}"
API response: {
  "data": {
    "boards": [
      {
        "allItems": {
          "cursor": null,
          "items": [
            {
              "id": "6842334675",
              "name": "Tarea 4",
              "itemData": [
                {
                  "column": {
                    "title": "Owner"
                  },
                  "text": "Gustavo Llermaly"
                },
                {
                  "column": {
                    "title": "Status"
                  },
                  "text": "Stuck"
                },
                {
                  "column": {
                    "title": "Due date"
                  },
                  "text": "2024-06-20"
                },
                {
                  "column": {
                    "title": "Timeline"
                  },
                  "text": "2024-06-17 - 2024-06-20"
                }
              ],
              "updates": [
                {
                  "id": "3261513743",
                  "text_body": "Sorry I'm stuck because I need security credentials."
                }
              ]
            }
          ]
        }
      }
    ]
  },
  "account_id": 23976820
}